\documentclass[12pt]{scrartcl}
\usepackage{da1}
\usepackage[nogin]{Sweave}
\usepackage{pdfpages}
\usepackage[T1]{fontenc}
\usepackage{natbib}
\usepackage{subfigure}
\usepackage[titletoc]{appendix}
\usepackage{wrapfig}
\usepackage{lipsum}
\usepackage{picinpar}
\usepackage{makeidx}
\usepackage{blindtext}   
\makeindex 

\newcommand{\pkg}[1]{\textbf{#1}}
\newcommand{\proglang}[1]{\textsf{#1}}
\def\tucne#1{\mbox{\mathversion{bold}$#1$}}
\newcommand{\m}[1]{\ensuremath{\mathbf{#1}}}
\newcommand{\boma}[1]{\mbox{\boldmath ${#1}$}}
\newcommand{\sdcMicro}{\texttt{sdcMicro}}
\newcommand{\sdcMicroGUI}{\texttt{sdcMicroGUI}}
%\VignetteIndexEntry{Tutorial for sdcMicroGUI}
\title{
	\vspace{1cm}
 	{\Large \textbf{Tutorial %for \R-packages 
    for \sdcMicroGUI \ } \\ (and
 	 \sdcMicro) }}
	\author{Matthias Templ, Bernhard Meindl and Alexander Kowarik}
	\date{Vienna, \today
	\vspace{2cm}\\
	\href{http://www.data-analysis.at}{http://www.data-analysis.at} \\
	\vspace{2cm}
	Acknowledgement: International Household Survey Network (IHSN)\footnote{Special thanks to Francois Fontenau for his support and Shuang
	(Yo-Yo) CHEN for English proofreading}
	\vspace{9cm}
	}
\pagestyle{fancy}           
\begin{document}

\newgeometry{top=20mm, bottom=20mm}

\maketitle

\newpage

\section{Overview of \sdcMicroGUI} \label{appC}
The \sdcMicroGUI~\citep{sdcMicroGUI} serves as an easy-to-handle, highly
interactive tool for users who want to use the  \texttt{sdcMicro} 
package for statistical disclosure control but are not familiar with the native
\R \ command line interface. The software performs automated recalculation and
display of frequency counts, individual and global risk measures, information
loss and data utility after each anonymization step. Changes to risk and utility
measurements of the original data are also conveniently displayed in the
graphical user interface (GUI). Furthermore, the code of every anonymization
step carried out within the GUI is saved in a script, which can easily be
exported, modified and re-used, making it possible to reproduce any results.         

The \sdcMicroGUI \ package has the following capabilities:
\begin{description}
  \item[Link to \sdcMicro:] The GUI uses the functionality of the 
  \sdcMicro~\citep{sdcMicro} package. It allows high performance and fast computations, since all basic operations are written in either
  \texttt{C} or \texttt{C++}.
  \item[Import/Export:] Datasets exported from other statistical software, such
  as \texttt{SAS}, \texttt{SPSS}, \texttt{Stata},  can easily be imported into
  \sdcMicroGUI .
  It is also possible to use \texttt{.csv} files as well as data stored in \R \ 
  binary format. An interactive preview and selection of import parameters (such as
  delimiters or separators) are provided for the import of .csv files, which
  allows users to read the data correctly into the GUI. Export facilities are
  provided for the same formats from which data can be read into the GUI.       
  \item[Usability:] The package is an easy-to-use tool for anonymization of microdata, and all methods are easily accessible.
 	\item[Recoding:] Facilities to rename and regroup categories and change values of a variable are included.
  \item[Interactivity:] Risk und utility measures are automatically estimated
  and displayed whenever users apply a disclosure limitation technique. In this
  way, users can immediately see the effects of any action. In addition, the
  risk and utility of the original unmodified data are displayed, which helps
  the user assess the effectiveness of the anonymization.        
  \item[Undo Button:] Because users can undo the last step completed in the GUI,
  they can try out several methods with different parameters and get instant
  feedback until the best result is achieved. Currently, users can reverse
  exactly one step in the history.      
  \item[Reporting:] Automatically generated, standardized reports in various
  output formats can be produced directly from the user interface. Reports can
  be exported to html, LaTex or plain text files. Users can generate two
  different types of reports. The more detailed, internal version includes the
  anonymization methods applied as well as estimates of risk and utility; there
  are different outputs depending on the methods used for different methods. The
  shorter, external version provides a brief summary of the anonymization
  procedure applied, suitable for external viewers. In this type of report,
  detailed comparisons and summaries are not included. For more information, see
  Section~\ref{sec:reports}.
  \item[Reproducibility:] With \sdcMicroGUI , users can save, load or edit
  scripts for later re-use. Within the GUI, each step of the anonymization
  procedure is recorded and stored in a script. The script includes valid
  \R -expressions that can be copied into \R . Thus, any anonymization procedure
  can be reproduced either by loading a script into the GUI or pasting the script
  directly into an \R -console.       
\end{description}  

\section{Installation and Updates}\label{sec:installation}
The recommended procedure to install the software consists of the following steps:
\paragraph*{Install \proglang{R}:} If R is already installed on the computer,
ensure that it is the current version. If the software is not installed, go to
\href{http://cran.r-project.org/bin/}{http://cran.r-project.org/bin/}
and choose your platform. For Windows, just
download the executable file and follow the on-screen instructions.       
\paragraph*{Install sdcMicro and sdcMicroGUI:} Open \proglang{R} on your computer and type:
\begin{lstlisting}
install.packages("sdcMicroGUI")
\end{lstlisting}
Installation is needed only once. Note that the GUI requires the \texttt{GTK+}
package to draw windows. When installing sdcMicroGUI, all required packages (including
\texttt{GTK+}) are automatically installed if the user has sufficient system
administration rights.      



\paragraph{Update:}
Typing \lstinline{update.packages()} into \proglang{R} searches for possible
updates and installs new versions of packages if any are available. Users can
also click on the menu item \textit{GUI} $\rightarrow$ \textit{Check
for Updates}; this should be done
regularly.     
    
If your organization uses a proxy server to connect to the Internet, automatic
access of R is usually restricted, but users can access the necessary Internet
connection from within \R . If you have a proxy server, just type the following
into the R-Console:       
\begin{lstlisting}
setInternet2(TRUE)
\end{lstlisting}
This will allow you to install the packages.

\section{Open sdcMicroGUI and Import Data}
\subsection{Open sdcMicroGUI}
Open the software \proglang{R} and type: 
\begin{lstlisting}
require(sdcMicroGUI); sdcGUI()
\end{lstlisting}

This will load the \sdcMicroGUI \ package into \proglang{R} and display the
point-and-click GUI. If you have not installed sdcMicroGUI, you will see an
error message; follow the steps described in Section~\ref{sec:installation} to install the package.     
     

\subsection{Key Elements of the GUI}\label{overview:gui}
\subsubsection*{Main menu}
Figure~\ref{fig:step1} shows the top menu of \sdcMicroGUI .
Following are the elements of the main menu, which is located at the top of the
GUI and always visible:    

\begin{itemize}
	\item \textbf{GUI} -- This menu item closes or restarts the interface and
	checks for updates of \sdcMicro \ and/or \sdcMicroGUI.
	\item \textbf{Data} -- This is used to import data into the GUI from various
	data formats as well as existing R-objects. Figure~\ref{fig:import} shows the
	import mask for .csv files. One can also use this menu to export data to different data
	formats and generate a report.     
	\item \textbf{Script} -- This menu saves, loads or views a script generated by \sdcMicroGUI.
	\item \textbf{Help} -- This menu provides different resources, such as
	information on disclosure control methods or documentation on the underlying functions of \sdcMicro.
	\item \textbf{Undo} -- The button \textit{Undo} allows users to go back one
	step in the anonymization process. This makes it is possible to try out an anonymization
	method; if the results are not satisfying, the last action can be reversed
	easily.     
\end{itemize}

\begin{figure}
\subfigure[The \textit{data}-menu entry at the main
menu.]{
\includegraphics[width=0.45\textwidth]{imgs/gui_import_menu.png}\label{fig:data}}\hfill
\subfigure[On-the-fly preview of \texttt{.csv} files.]{
\includegraphics[width=0.5\textwidth]{imgs/gui_import_csv.png}\label{fig:import}}
\caption{\label{fig:step1}\textit{Data} menu entry and the on-the-fly preview when importing .csv-files.}
\end{figure}

\subsubsection*{GUI Main Window}\label{cont:tabs}
The GUI displays three tabs (see Figures \ref{fig:tab1}, \ref{fig:tab2} and
\ref{fig:tab3}).
\begin{description}
\item[Identifiers --] The first tab summarizes the current selection of key
variables after a dataset is imported. It displays the number of categories for
each categorical key variable, and three statistics (i.e., minimum, median and
maximum) for each numerical key variable. If any auxiliary variables, such as
sampling weight, household ID or a strata variable, are selected, summary
statistics are shown for these variables as well. In this tab, direct
identifiers can be removed by clicking on the corresponding button. It is also
possible to reset the current choice of key variables (see
Figure~\ref{fig:tab1}).
\item[Categorical --] This tab is divided into three parts. Information about
disclosure risk based on frequency counts is shown at the top left of
Figure~\ref{fig:tab2}.
Beneath this information display additional risk measures, including the number 
of observations having a much greater risk than the primary observations
(using robust measures), as well as the expected number of re-identifications
(i.e., the sum of all individual risks) for both the original and the modified
microdata. The expected number of re-identifications based on a hierarchical
risk measure exploiting household information is also calculated and displayed.
Methods that can be used for the anonymization of categorical key variables
(e.g., recoding, post-randomization [PRAM], local suppression) are displayed in
the center of the screen. Important measures on information loss are shown on
the right. Information about recoding (e.g., number of categories, mean size and
number of observations in the smallest category) for both original and modified
key variables is listed at the top right. The number of suppressions within each
key variable appears at the bottom right.                
\item[Continuous:] The third tab is also divided into three parts (see
Figure~\ref{fig:tab3}). 
A risk measure that calculates the percentage of masked data
points that are too close to the original data values is shown on the left. Methods such as micro-aggregation, adding noise and shuffling, which can be used to anonymize
continuous key variables, are shown in the center and can be selected and
applied. On the right, two measures of information loss, IL1 and differences in
eigenvalues, are listed.         \\
\end{description}


\begin{figure}[ht]
\centering
\subfigure[View of Tab "Identifiers"]{
\includegraphics[width=0.45\textwidth]{imgs/gui_tab1.png}
\label{fig:tab1}}
\subfigure[View on Tab "Categorical"]{
\includegraphics[width=0.45\textwidth]{imgs/gui_tab2.png}
\label{fig:tab2}}
\subfigure[View on Tab "Continuous"]{
\includegraphics[width=0.45\textwidth]{imgs/gui_tab3.png}
\label{fig:tab3}}
\caption[]{\label{gui:tabs}The three main tabs of the GUI. See
Section~\ref{cont:tabs} for information on content.}
\end{figure}



All GUI frames and views that present summaries, names, frequency calculations,
suppressions, disclosure risk and data utility are filled in with actual values
as soon as data are selected. Moreover, buttons to apply certain methods such as
\textit{recoding}, \textit{PRAM} or \textit{local suppression} become clickable
when data are loaded into the GUI. As soon as a method is applied on the data, all related views and
measures are updated with current values. For example, after applying global
recoding, the disclosure risk and data utility for categorical key variables are
updated to show current values automatically.         


\subsection{Select, Load or Import Data}
The GUI offers several options for importing data into the system; see  
Figure~\ref{fig:data}. Data that is already available in the \R \ workspace can
simply be selected by using the menu entry 
\textit{Data $\rightarrow$ Choose R-Dataset}. 
Using \textit{Data $\rightarrow$ Import}, it is possible to import data in
various formats, such as native RData files, as well as import/export files from
other statistical software products, such as \texttt{SPSS}, \texttt{SAS}
and \texttt{STATA}.


The advanced functionality available to import text-delimited \textit{.csv} files is very
important (see Figure~\ref{fig:import}). In this case, the user is presented
with a data preview window showing the first rows of a dataset with the current data import
parameters and several ways to change import options, such as:     
   
\begin{itemize}
	\item \textit{header}: If checked, the first line of a dataset displays column names
	\item \textit{fill}: If checked, blanks are added for rows of unequal length
	\item \textit{strip white}: Allows leading and trailing white space to be stripped from unquoted character fields
	\item \textit{strings as factors}: If checked, character vectors are converted to factors
	\item \textit{blank line skip}: If checked, blank lines are ignored when reading the file
\end{itemize}

Additionally, the separator between values, decimal operator, quotes, skip and
coding of missing values (i.e., \textit{NA}-strings) can be specified. When the
user changes a field, the preview window of the data changes according to the options
and informs the user whether the data was correctly   
imported. The type of each variable can also be specified (i.e., \textit{numeric} or
\textit{factor}\footnote{In \R , data type \textit{numeric} belongs to
continuous variables while data type \textit{factor} belongs to categorical
variables with given levels}) when importing a \textit{.csv} file, using the button \textit{Adjust
Types}, as shown at the bottom of Figure~\ref{fig:import}. 


\section{Removing Direct Identifiers}
After a dataset is selected or imported, the buttons  \textit{Select key variables/Reset}
and \textit{Remove direct identifiers} under the GUI's ``Identifiers'' tab
become active (see Figure~\ref{fig:tab1}). Click on the button \textit{Remove direct
identifiers} to select the
variables that specifically identify statistical units and remove them.   

\section{Selecting Key Variables}

Once a dataset is selected or imported, the ``Select variables'' window
automatically pops up (see Figure~\ref{gui:var}). 
To illustrate the selection of key variables, the \sdcMicro \ test data set is chosen. This is a real survey used for the development of \texttt{C++} code at the International Household Survey Network.

Click on \textit{Select key variables/Reset} under
the ``Identifiers'' tab to modify your selection. 
Note that statistical methods and the
corresponding functions in \R \ are in most cases specific in terms of the scale
of variables. Some methods on SDC should be applied only to categorical variables (in
\R , these variables correspond to vectors of class \textit{factor}), while some are
suitable only for continuous variables (in \R , they are vectors of type
\textit{numeric}). In any case, the key variables should be selected. 
       

\begin{wrapfigure}{l}{0.5\textwidth}\centering
%\vspace{-0.8cm}
\includegraphics[scale=0.4]{imgs/gui_variable_selection.png}
\caption{\label{gui:var}Select variables window.}
\end{wrapfigure}

For our chosen data set, the variables {\it urbr} (degree of urbanisation), {\it roof} (household has roof), {\it sex} and {\it age} (in years) have been chosen as categorical key variables (a discussion on the selection of key variables is given in the 
Introduction to Statistical Disclosure Control (REFERENCE)). As continuous key variables the variables and \textit{income} and \textit{savings} are chosen, i.e. a scenario where we believe that information on this variables can be stored in other available data bases and therefore be used for disclosing information.

Information on \textbf{clustering} (e.g., households) is often required and can be
entered by using the variable selection window. In the chosen data set this belongs to variable \textit{ori\_hid}, which is an ID that express which people lives in the same household.
It may also be important to
select a \textbf{weight vector}, especially if the microdata have been collected from a
complex survey. This information must be provided by the user in order for the
system to make use of this knowledge. For our test data set this information is stored in variable \textit{sampling\_weights}.     

Some functions can also be applied on strata (on domain level). In this case, specifying
or creating a variable defining population subgroups is required.   

It is often necessary to generate a new stratification variable that combines a
few categorical variables. This can be done by clicking the button 
\textit{Generate Strata Variable}, see Figure~\ref{gui:var}. A window pops up where users
can specify the variables that should be used for the stratification of the data
(see Figure~\ref{gui:strata}).

Other variables do not contribute to any
aspect in the anonymization process\footnote{Except for when applying the method
of shuffling, all variables are made selectable (as predictors), independent of
this choice}.   

\begin{wrapfigure}{R}{0.5\textwidth}\centering
\vspace{-0.5cm}
\includegraphics[scale=0.45]{imgs/gui_generate_strata.png}
\caption{\label{gui:strata}Generate a strata variable window.}
\end{wrapfigure}

Note that most of the variable selections are optional. For example, users are
not required to select any continuous (or \textit{numerical}, in the GUI)
variables if they are not present in the data.

If variables have the wrong scale (e.g., if categorical key variables are saved
as \textit{numeric}), the global recoding frame automatically pops up and can
then be used to recode the corresponding variables.     
 
\color{white}
\blindtext  
\color{black}

\vspace{-3cm}

\section{Anonymisation of Categorical Key Variables}
Figure~\ref{fig:tab1} shows the GUI after the necessary variables have been
selected and optionally recoded. The  \textit{Categorical} tab, which appears second on
the \sdcMicroGUI \ main window, shows options for categorical key variables (see
Figure~\ref{fig:tab2}).   

The left column of Figure~\ref{fig:tab2} shows frequency counts and risks for
categorical key variables. This information is updated whenever a method is applied to
categorical key variables to show how recoding impacts frequency counts and
individual risks. All observations violating 3-anonymity  \citep{Samarati01,Sweeney02} can
be shown by clicking on the button \textit{View Observations violating 3-anonymity}. To compare the
impact of anonymization methods already applied, the same information calculated
with the original, unmodified data is also displayed. This can also be seen in Figure~\ref{fig:tab2} as for example 133 (2.9\%) of the observations have been violating 2-anonymity and 239 (5.22\%) observations have been violating 3-anonymity.

Information on the number of observations expected to be re-identified under a
given selection of key variables is displayed (as the sum over all individual disclosure risks), as well as information on the
number of observations with considerably higher risk than the main part of all
observations. Observations with high individual risks can be viewed by clicking
the button \textit{View observations with risk above the
benchmark}. The $l$-diversity
measure \citep{Machanava07} can also be calculated by clicking on the
corresponding button; a new window pops up in which the user can select
sensitive variables (for example income or savings in this case) and set the l-recursive constant (see Figure~\ref{fig:div1}). When the
button \textit{OK} in this window is clicked, another window containing the results pops
up and the distribution of $l$-diversity scores for each sensitive variable is
displayed. By clicking on the button \textit{View
Observations violating  $2$-diversity},
another window is opened that includes a table showing all observations that are
violating  $2$-diversity, which means that only up to two different values of the
sensitive variables exist in specific keys. If no observations violate 
$2$-diversity, an information message is shown. We note that all these measures are explained in more detail in the corresponding disclosure guidelines that are also included with \pkg{sdcMicro}.                 

The middle column of Figure~\ref{fig:tab2} shows four statistical disclosure control (SDC)
methods for anonymization of categorical key variables: \textit{recoding},
\textit{PRAM} \citep{Gouweleeuw98}  and two different methods to perform
\textit{local suppression}, which will be explained in the following sections.    

Information about the effects of recoding in key variables is displayed on the
right side of Figure~\ref{fig:tab2}. For each key variable, the number of categories, mean
sizes and size of the smallest category are shown. The same values based on the
original, unmodified variables are also displayed, in parentheses. The number
and percentages of suppressions for each categorical key variable appear below
this information. Figure~\ref{fig:tab2} shows, for example, that the original number of categories of key variable {\it age} was 88, the number of categories after recoding was reduced to 9. The mean size of age-categories after recoding is 570 while it was only 52 before recoding. Similarily, the size of the smallest age category after recoding is 82 while it was 1 before recoding.


\subsection{Recoding}

Clicking on the button \textit{Recode} in the \textit{Categorical} tab opens a window in which the
categorical key variables can be recoded, as shown in Figure~\ref{gui:recode}.

It is possible to recode all categorical key variables separately. Corresponding
variable names are visible in the menu of the key variables configuration frame.
Any variable can now be converted, recoded, grouped and renamed. Breaks and
label names can be specified for converting continuous scaled variables into
classes. It is also possible to group categories of factors into broader
categories by using the button \textit{Group
selected level}, and to rename specific
categories by clicking on the button \textit{Rename selected level} after selecting a
factor level. To demonstrate this, we explain how to recode variable {\it age} from the testdata set that is included with \pkg{sdcMicro} in more detail. The variable holds the age of respondents in years. To form for example an age group holding all the respondents between 20 and 29 years one would have to select the corresponding years. Once the desired levels have been selected the button \textit{Group
selected level} must be clicked. A window pops up in which one can enter a desired level-name for this group.

Distribution of the variables and information on tabulated
variable are always shown graphically. Additionally, the frequency counts of all
key variables are available and visible in a separate tab.           


\begin{figure}[ht]
\centering
\subfigure[Original distribution of \textit{age} (continuous).]{
\includegraphics[width=0.45\textwidth]{imgs/gui_age_original.png}\label{fig:r1}}
\subfigure[Variable \textit{age} recoded into age groups and converted to a factor.]{
\includegraphics[width=0.45\textwidth]{imgs/gui_age_recoded.png} \label{fig:r2}}
\subfigure[Frequency counts and individual risks of all combinations of categorical key variables.]{
\includegraphics[width=0.45\textwidth]{imgs/gui_frequencies}
\label{fig:r3}}
\subfigure[help file for global recoding.]{
\includegraphics[width=0.45\textwidth]{imgs/gui_help_recode.png}
\label{fig:r4}}
\caption[]{%
\label{gui:recode}The global recoding interface. All key variables can be recoded.}
\end{figure}


Sample and population frequencies ($f_k$ and $F_k$, respectively) are
illustrated when the \textit{Frequencies} tab in the global recoding menu is clicked.
Frequencies, individual risks \citep{Fra04} and values of the
categorical key variables are shown. The table containing these statistics     
is interactive and sortable; therefore, for example, clicking on the top of the
risk column sorts the table according to the values of the individual risks in
ascending order. Clicking a second time will sort the table by this variable in
descending order. This is especially helpful because on can sort the table according to individual reidentification risks of observations. Thus, it is very easy to identify the observations having the highest re-identification risks.    




In tab $\longrightarrow$ \textit{Mosaic Plot} of the global recoding menu,
a mosaic plot of all selected key variables is shown. The plot (which is definately for experts) shows the multivariate distribution of the selected categorical key variables. This plot as well as
frequency counts and risks are updated automatically whenever any action that
modifies key variables is applied. We note that the interpretation of the mosaic plot is mostly helpful for expert users.   

\begin{figure}[ht]
\centering
\subfigure[$l$-Diversity.]{
\includegraphics[width=0.25\textwidth]{imgs/gui_ldiversity.png}
\label{fig:div1}
}
\subfigure[Post randomization method (PRAM).]{
\includegraphics[width=0.35\textwidth]{imgs/gui_pram.png}
\label{fig:pram}
} 
\caption[]{%
\label{gui:pram}$l$-diversity and PRAM.}
\end{figure}

\subsection{PRAM}
After selecting the post randomization method, PRAM, a new window pops up, in
which the user can select variables to apply the PRAM method to (see Figure~\ref{fig:pram}). 
PRAM swaps categories randomly with predefined probabilities.   
Optionally, a variable for stratification can also be selected. If a stratification variable has been selected, PRAM is
applied on each stratum independently. Once the procedure has finished, a window
summarizing the results pops up. The output of this window consists containing a table with three columns. The first column displays the variable names; the  second column
(``nrChanges'') displays the total number of changed values; and the third
column (``percChanges'') displays the percentage of changed values for each
variable.


\subsection{Local Suppression}
Even after recoding key variables, some combinations of characteristics of these
variables may still violate $k$-anonymity, or some observations may still have
relatively high individual disclosure risks. Further recoding, however, may not
be possible because the data utility would be too low. At this stage, local
suppression can be applied. Two methods are available in \sdcMicroGUI.      

The first method applies optimal local suppression with the goal of reaching
$k$-anonymity when the button Local suppression (optimal - $k$-anonymity) is
clicked. In this window, the user can choose the importance of variables for the
local suppression algorithm. This means that the higher the rank or importance
of a variable, the higher the probability that required suppression is applied
to this variable. If one has specified a key variable that is considered extremly important (e.g region) one may specify the lowest importance for this variable. Thus, values in this variable will only be suppressed if no other possibility is avaiable to reach $k$-anonymity. Otherwise, the choice of importance of key-variables can depend for example on the future use of the anonymized data set. 

The probabilities of applying suppressions are lower for variables with lower
ranks. \sdcMicroGUI \ automatically suggests an optimal order of importance (based on the number of unique values for each key variable), as
shown in Figure~\ref{fig:l1}. 
     

\begin{figure}[ht]
\centering
\subfigure[Optimal local suppression based on $k$-anonymity.]{
\includegraphics[width=0.30\textwidth]{imgs/gui_localsupp_opt.png}
\label{fig:l1}} 
\subfigure[Local suppression based on risk threshold.]{
\includegraphics[width=0.30\textwidth]{imgs/gui_localsupp_threshold.png}
\label{fig:l2}}
\caption[]{%
\label{gui:localSupp2}Optimal and individual local suppression.}
\end{figure}

By adjusting a slider, the user may also change the parameter $k$ (how often each key should exist in the data set) for $k$-anonymity,
which is typically 3 or 4. After the procedure has finished, the resulting
number of combinations of the key variables violating $k$-anonymity (which is
usually zero) is automatically updated and printed at the top left of this tab,
together with the updated number of new suppressions.     

Another option is to apply local suppression only to specific variables by
  clicking on the button \textit{Local Suppression
(threshold - indiv.risk)}; see Figure~\ref{fig:l2}. 
Changing the slider ``Individual Risk Threshold'' sets a risk threshold. This threshold is simply an upper limit for individual risks that is relevant for the value of ``Unsafe Records''. This value is automatically updated and shows the number of observations that currently have larger individual risks than the selected risk threshold. By clicking on buttons \textit{Show ecdf} or \textit{Show histogram}, the user is presented with
an interactive plot window, which displays the empirical cumulative density
function of the individual risks or a histogram. In both cases, a blue vertical
line is displayed at the current value of the individual risk threshold.
If the button \textit{Suppress above threshold} is clicked, the use can select one of the key variables. Finally, all values in this variable for observations having higher individual risks than this threshold will be suppressed. This is a simple method to reduce individual risks because it is applied only to those observations that already have risks over a given threshold value. For example, if the risk threshold is chosen as 0.1 and the variable is chosen as {\it age}, the age for all observations that have an individual re-identification risk larger than 0.1 will the suppressed.     



\section{Anonymisation of Continuous Key Variables}
The Continuous tab of the main window applies SDC methods for continuous
variables and displays risk measures and measures of information loss, as
discussed in Section~\ref{overview:gui}. After applying any disclosure
limitation technique, disclosure risks and data utility measures are automatically re-calculated and
updated values are printed in this tab, providing information on how the
continuous scaled key variables are preserved and how large the disclosure risk
remains. The methods Micro-aggregation, Adding Noise and Shuffling can be
selected in this window.        


\subsection{Microaggregation}
By clicking on the button \textit{Microaggregation}, a new window pops up, as shown in
Figure~\ref{gui:ma}. The user selects an aggregation level by moving a slider, a
micro-aggregation method in a drop-down box and at least one numeric key
variable. Five micro-aggregation methods are available in sdcMicroGUI:
\textit{``mdav''} \citep[see, e.g.,][]{Domingo02}, \textit{``rmd''}
\citep{Templ08d}, \textit{``pca''} \citep[see,
e.g.,][]{Templ08tdp}, \textit{``clustpppca''} \citep{Templ08tdp}  and
\textit{``influence''} \citep[see, e.g,][]{Domingo02b}.
It is also possible to apply micro-aggregation to subsets of the data
separately. If this option is used, the user has to select an additional
strata-variable that defines the partition of the dataset. A help tab is also
available in this window where more information about possible methods and
parameters is available.      
 


\begin{figure}[ht!]
\centering
\subfigure[Window to specify parameters and options for micro-aggregation of
continuous variables.]{
\includegraphics[width=0.30\textwidth]{imgs/gui_microaggregation.png}
\label{gui:ma}} \hspace{0.5cm}
\subfigure[Specifying options for shuffling method.]{
\includegraphics[width=0.29\textwidth]{imgs/gui_shuffling.png}
\label{fig:s1}}
\caption[]{\label{gui:mash}The Micro-aggregation and Shuffling windows.}
\end{figure}


\subsection{Adding Noise}
The user can add stochastic noise to numerical key variables by clicking on \textit{Add Noise}. 
In this case, a new window pops up, where the user specifies whether to
add additive or correlated noise \citep{Brand04} using a drop-down menu. The user
must also specify the desired amount of noise,  in percentages, and select at
least one numeric key variable. If the user clicks on \textit{OK}, the selected method is
applied to the chosen variable(s). It is, however, always possible (as it is in
all windows of the GUI) to cancel the current operation by clicking on \textit{Cancel}.
As in the pop-up window for micro-aggregation, a help tab is available in this
window as well, providing additional information.      

     

\subsection{Shuffling}

To anonymize continuous key variables, shuffling \citep{Muh06}
can be selected by clicking on button \textit{Shuffling}. A new window will open
automatically, and the user can select the shuffling method, regression method,
and covariance method, respectively, using drop-down menus.      

The default shuffling method is \textit{ds} \citep{Muh06}, but 
\textit{mvn} \citep{sdcMicro,ihsnsdcguidelines} and \textit{mlm}
 \citep{sdcMicro,ihsnsdcguidelines} may also be selected.
The default regression method is \textit{lm} (linear regression). As a robust
alternative, method MM \citep{Maronna06,ihsnsdcguidelines} may be
chosen; in this case, a robust regression with M-estimator is used. Another
choice for the covariance method includes \textit{spearman}. Alternatives that can be
selected are  \textit{pearson} and the robust variant \textit{mcd} \citep{Rouss99}.        

Afterwards, users must select response and predictor variables. In \sdcMicroGUI,
all variables selected as predictors are used without any interactions between
them. Any complex formula can be applied using function 
\lstinline{shuffle()} from \sdcMicro~\citep{sdcMicro}. Note that all variables
can serve as predictors, which means that this selection is not limited to
previously selected key variables.
As in the other pop-up windows, additional help is provided in the help tab (see
Figure~\ref{fig:s1}).      

\section{Exporting Results}
\subsection{Export Anonymised Datasets}

8.1 Export Anonymized Datasets
Using \textit{Data $\rightarrow$ Export} at the top of the main menu, it is possible to export the
anonymized dataset into various formats. By clicking on the appropriate menu
entry, the data can be exported as plain text \texttt{.csv} files, as well as in formats
that can be read by other statistical software such as \texttt{SAS}, \texttt{SPSS} or \texttt{Stata}. In
addition, the dataset can be saved directly to the \proglang{R} workspace or by using the \proglang{R}
binary format.       


\subsection{Reports} \label{sec:reports}
Selecting \textit{Data $\rightarrow$ Generate Report} 
in the top menu opens a new window from which two different reports, internal
and external, can be produced by selecting the corresponding button. It is also
possible to select the output format. Reports can be saved as html, pdf or plain
text files. A sample output is shown in Figure~\ref{gui:report}.     


\paragraph{Internal Report} by setting function argument \textit{internal=TRUE} include information about the performed actions,
disclosure risk, measures of information loss and session information on the
software versions used. This detailed report is suitable for the organization
that holds the data for internal use and documentation of the anonymization
procedure.      
\paragraph{External Report} by setting function argument \textit{internal=FALSE} include less information than internal reports. For
example, all information on disclosure risks and information loss is suppressed.
This report is suitable for external users of the anonymized data.     

\begin{figure}[ht!]
\begin{center}
\includegraphics[width=0.75\textwidth]{imgs/GUI-step5-report2}
\caption{\label{gui:report}A screenshot of the first page of the automatic generated SDC-report.}
\end{center}
\end{figure}

Figure~\ref{gui:report} shows the first page of the internal report, where information on
selected variables,  anonymization methods applied and disclosure risk is
displayed. Detailed analysis on risk and utility follows. Information included
in the report always depends on the anonymization process. For example, if PRAM
is not applied, no specific summary for variables subjected to PRAM is
available. But if PRAM is used, the entire disclosure risk summary is presented
differently. We note that the report gives a summarization of the anonymization process and helps a lot to document the differences between different anonymization approaches. However, it still only summarizes results that are conveniently available in the graphical user interface at all times.      


\section{The Script: Reproducibility of Results Obtained with the GUI}
\label{C:script} 
Any result obtained from clicking and setting parameters interactively in
\sdcMicroGUI \ is reproducible. This is a major feature of the software because
every action the user performs is internally stored, saved and listed and can be
reviewed in the \textit{script frame}. To access this window, select Script \textit{Script $\rightarrow$ View} 
on the
main menu; see Figure~\ref{gui:script}.      


\begin{figure}[ht!]
\begin{center}
\includegraphics[width=0.55\textwidth]{imgs/gui_view_script.png}
\caption{\label{gui:script}The view script window showing the anonymization history}.
\end{center}
\end{figure}

It is possible to not only view the current script, but also to export (\textit{Script $\rightarrow$ Export})
and import (\textit{Script $\rightarrow$ Import}) scripts from \sdcMicroGUI.
Therefore, it is easy to reproduce previously produced output. It is even suitable to modify some
steps or alter the output. Users can also remove specific steps from the script
when navigating through it or execute steps only up to a certain point. This
feature is very helpful for reproducing older results, continuing work that was
previously started or restarting steps of the anonymization quickly.       



\section{Working with the sdcMicro Package} \label{sdcMicroPackage}
For each method, we show its usage in the software via command lines, using
\sdcMicro . We start with a brief introduction to the package before the methods are explained.



\subsection{General Information about \sdcMicro}
In the last few years, the statistical software environment \proglang{R}
(\proglang{R} Development Core Team, 2011, also known as \proglang{R}) has
become more popular. \proglang{R} currently has more users than any other statistical software\footnote{See, for example,
\href{http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html}{http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html},
where \texttt{R} entered the top 20 of all programming software in January 2012.
\texttt{SAS} is ranked on place 32.},
and is the standard statistical software
for data analysis and graphics. For statisticians, \proglang{R} has become the major
programming language in its field.   
 
Version 1.0.0, the first version of the \sdcMicro \ package, was released in 2007
on the comprehensive \proglang{R} archive network (CRAN, \href{http://cran.r-project.org}{http://cran.r-project.org}). 
The current release, version 
 \Sexpr{packageVersion("sdcMicro")}, is a huge step forward. Almost all methods are implemented in a highly
object-oriented manner (using S4 classes) and have been written internally in \texttt{C} 
or call \texttt{C++}  code, which allows for high-performance computations. The
International Household Survey Network (IHSN) provided \texttt{C++} code for many methods
that were partly integrated into sdcMicro and partly rewritten. One example is
given in Figure 11, where we show the computation time of the current version of
sdcMicro (version 4.1.0) compared to the previous implementation in sdcMicro ($<$
version 4.1.0) that calls the IHSN \texttt{C++} code. While the IHSN \texttt{C++} solutions were
exponential in computation time regarding the number of observations, the new
implementation has linear complexity (see Figure~\ref{compTime1}). For special tasks
(e.g., heuristic optimal local suppression), the computation time may even
provide faster growth, i.e., less than linear growth. The higher the number of
observations, the higher the probability that $k$-anonymity is reached. This fact
is used internally for optimizing the calculations.              


%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{figure}[ht]
\centering
\subfigure[Frequency estimation and risk measurement.]{
\includegraphics[width=0.46\textwidth]{imgs/compTime1b}
\label{compTime1}} \hspace{0.2cm}
\subfigure[Local suppression]{
\includegraphics[width=0.46\textwidth]{imgs/compTime2b}
\label{compTime2}}
\caption[]{\label{compTime}Computation time of IHSN \texttt{C++} code (sdcMicro
version $<$ 4.1.0) and sdcMicro (version $\geq$  4.1.0).}
\end{figure}



%%%%%%%%%%%%%%%%%%%%%%%%
%Integrating IHSN \texttt{C++} code into \texttt{R} have several benefits, 
%some of which are listed below:
%\begin{itemize}
%  \item code written by IHSN can be used within a free and open-source 
%  statistical software environment.
%  \item these methods are provided within the most popular statistical software
%  \item the integration of \texttt{C++} code allows fast computations in \texttt{R}.
%  \item \texttt{sdcMicro} is a collection of microdata protection methods and
%  thereby easily called.
%\end{itemize}

After installing and starting \R, the package description, which shows summary
information about the package, can be called by typing the following:    
\begin{lstlisting}[frame=single, label={listinghelpPa}, caption={}] 
packageDescription("sdcMicro") 
\end{lstlisting}

%<<echo=FALSE>>=
%packageDescription("sdcMicro") 
%@

%To look for the index of available methods one can type \lstinline{help(package=sdcMicro)} into \R .

\subsection{Getting Help}

For each of the methods implemented in \sdcMicro, a help file is available, which
not only describes all possible parameters that can be changed, but also
features simple, working examples that can be directly copied into \R. The help
file for a given function can be accessed by calling an \R -function with a
\texttt{?} directly before the function name.      

For example, the following commands call the index of methods available in the
package sdcMicro, and the help file for the micro-aggregation function:    

\begin{lstlisting}[frame=single, label={listinghelp}, caption={}] 
help(package=sdcMicro)  # index of methods
?microaggregation       # same as help("microaggregation")
\end{lstlisting}

\sdcMicro \ features vignettes, which are manuals available in pdf formats. These
vignettes contain interesting information, including the most recent version of
this tutorial. The following command
browses the available vignettes of sdcMicro.   
%Such vignettes give a good overview of the capabilities 
%of the software package. The vignettes contained in \R \ package \sdcMicro \ can 
%be opened using the code listed in Listing~\ref{listing:vignette}. 
%\textcolor{red}{
%The first vignette contains an earlier report about 
%\sdcMicro. 
%Another vignette gives some information about the integration of the IHSN \proglang{C++} code in \sdcMicro \ %where also some testing of methods in terms of computational speed is integrated.

\begin{lstlisting}[frame=single, label=listing:vignette, caption={}] 
vignette(package="sdcMicro")
\end{lstlisting}

\subsection{S4 Class Structure}

The \sdcMicro \ package supports both the straightforward application of methods to
data and the application of methods to \textit{sdcMicroObj}. For example, when applying
micro-aggregation on three continuous key variables to the dataset \lstinline{testdata}, the
command \lstinline{microaggregation(testdata[,c("expend","income","savings")])} is
equivalent to \lstinline{microaggregation(sdc)}, if \lstinline{sdc} has been properly defined as an
object of class \textit{sdcMicroObj}.      

To start, first load the \sdcMicro \ package installed (installation
instructions have already been given in Section~\ref{sec:installation}, by
typing the following:
       
\begin{lstlisting}[frame=single, label=list:load, caption={}] 
require(sdcMiro)
\end{lstlisting}

To define an object of class \textit{sdcMicroObj}, 
 the function \lstinline{createSdcObj()} can be used. In this case, all required
 parameters have to be specified, including, for example, categorical and
 continuous key variables, the vector of sampling weights and optionally
 stratification and cluster IDs. The following example shows how to generate
 such an object using the test data included in library \sdcMicro .
\begin{lstlisting}[frame=single, label=list:create, caption={}] 
load(testdata)
sdc <- createSdcObj(testdata, 
 keyVars=c('urbrur','roof','walls','water','electcon','sex'), 
 numVars=c('expend','income','savings'), 
 w='sampling_weight', hhId='ori_hid')
\end{lstlisting}

<<echo=FALSE>>=
require(sdcMicro)
sdc <- createSdcObj(testdata2, keyVars=c('urbrur','roof','walls','water','electcon','sex'), 
	numVars=c('expend','income','savings'), w='sampling_weight', hhId='ori_hid')
@
The following shows how to define the categorical and continuous key variables,
vector of weights and household IDs; the slots of the \textit{sdcMicroObj} \lstinline{sdc} are
pre-filled:    
<<echo=TRUE>>=
slotNames(sdc) 
@
The first slot contains the original data, the second slot contains the index of
categorical key variables, and so on. For details, type  
\lstinline{help("createSdcObj")} into \proglang{R}).

Every method is then applied on the \textit{sdcMicroObj} 
and all related computations are done automatically. For example, the individual
risks are re-estimated whenever a protection method is applied, and then the
corresponding slots are updated. In addition, the system knows which methods can
be applied to which variables. When applying a method that is suitable for
categorical variables, the user does not have to specify the variables again.    

The application of a method to an object of class \textit{sdcMicroObj} is
done by \texttt{method(sdcMicroObj)}, where the \texttt{method} 
is a placeholder for any method available in \sdcMicro . Below is 
an example of this object-oriented implementation approach. In this
example, the method micro-aggregation is applied on an object of class \lstinline{sdcMicroObj}. Since
micro-aggregation is suitable only for continuously scaled key variables, the
categorical variables remain untouched. Additionally, the risk and utility slots
are updated to contain the new estimates using current values of the
micro-aggregated variables. In this example, default values for parameters are
used, but it is possible to change the default values. For details, see
\lstinline{help("microaggregation")}.            
The following code shows the application of a microaggregation to an object of
class \textit{sdcMicroObj}:
\begin{lstlisting}[frame=single, label=list:ma, caption={}] 
sdc <- microaggregation(sdc)
\end{lstlisting}
%
The slots of the \textit{sdcMicroObj} can be accessed also using function \lstinline{get.sdcMicroObj()}, as 
shown below.
\begin{lstlisting}[frame=single, label=list:access, caption={}] 
get.sdcMicroObj(sdc, "utility") ## access utility
get.sdcMicroObj(sdc, "keyVars") ## access cat. key variables
\end{lstlisting}

Print methods are available to show the relevant information. See the following
code listing for printing the risk:   

\begin{lstlisting}[frame=single, label=risk, caption={}] 
print(sdc, "risk")
\end{lstlisting}
<<echo=FALSE>>=
print(sdc, "risk")	
@

More information on \sdcMicro \ and its facilities can be found in the manual of
\sdcMicro ; see \cite{sdcMicro}.

\section*{References}

\bibliographystyle{plainnat}
\bibliography{references}

\end{document}
